package retail.dataframes

import com.typesafe.config.{Config, ConfigFactory}
import org.apache.hadoop.fs.FileSystem
import org.apache.log4j.{Level, Logger}
import org.apache.spark.{SparkConf, SparkContext}
import org.apache.spark.sql.SQLContext

object TotalRevenueDailySQL {

  def main(args: Array[String]) = {

    var inputPath = "hdfs://192.168.163.131:8020/user/cloudera/data/retail_db"
    var executionEnvironment = args(2)
    val props: Config = ConfigFactory.load()
    val conf = new SparkConf().
      setAppName("TotalRevenueDailySQL").
      setMaster(props.getConfig(executionEnvironment).getString("executionMode"))

    val sc = new SparkContext(conf)
    val fs = FileSystem.get(sc.hadoopConfiguration)
    val sqlContext = new SQLContext(sc)
    sqlContext.setConf("spark.sql.shuffle.partitions", "2")
    import sqlContext.implicits._

    if (args.length < 1) {

      Logger.getLogger(TotalRevenueDFDemo.toString).getLevel
      Logger.getLogger("org").setLevel(Level.OFF)
      Logger.getLogger("akka").setLevel(Level.OFF)


      System.setProperty("hadoop.home.dir", "C:\\Users\\Debu\\IdeaProjects")
    }
    else {
      executionEnvironment = args(2)
      inputPath = args(0)
    }
    val ordersDF = sc.textFile("hdfs://192.168.163.131:8020/user/cloudera/data/retail_db/orders.txt").
      map(rec => {
        val r = rec.split(",")
        Orders(r(0).toInt, r(1), r(2).toInt, r(3))
      }).toDF()

    ordersDF.registerTempTable("orders")

    val ordersitemsDF = sc.textFile("hdfs://192.168.163.131:8020/user/cloudera/data/retail_db/order_items.txt").
      map(rec => {
        val a = rec.split(",")
        Orderitems(a(0).toInt, a(1).toInt, a(2).toInt, a(3).toInt, a(4).toFloat, a(5).toFloat)
      }
      ).toDF

    ordersitemsDF.registerTempTable("order_items")

    val TotalRevenueDaily = sqlContext.sql("select o.order_date,sum(order_items.order_item_subtotal) from " +
      "orders o join order_items on o.order_id = order_items.order_item_order_id " +
      "group by o.order_date order by o.order_date").show()
  }

}